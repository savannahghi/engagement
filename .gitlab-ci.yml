image: eu.gcr.io/savannah-emr/golang-ci-image:0.0.4

stages:
  - test
  - deploy

variables:
  GOOGLE_APPLICATION_CREDENTIALS: $CI_PROJECT_DIR/bewell-app-ci.json

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

lint_and_test:
  stage: test
  before_script:
    - bash decrypt_service_account.sh
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com"
  script:
    - staticcheck -show-ignored ./...
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
    - errcheck -ignore 'os:.*,' $(go list ./... | grep -v /vendor/)
    - gosec -exclude=G101 ./...
    - ineffassign ./*  # identify ineffective assignments
    - "gocyclo -over 5 . || :" # display the most complex functions but do not fail the build because of this
    - go-acc -o coverage.txt --ignore generated,main,model ./...
    - grep -v "generated.go" coverage.txt | grep -v "_gen.go" | grep -v "federation.go" | grep -v "generated.go" | grep -v "resolvers.go" | grep -v "resolver.go" | grep -v "server.go" > coverage.out
    - go tool cover -html=coverage.out -o coverage.html
    - gocov convert coverage.out > coverage.json
    - gocov report coverage.json > coverage_report.txt
    - tail coverage_report.txt
  artifacts:
    untracked: true
    paths:
      - $CI_PROJECT_DIR/coverage.txt
      - $CI_PROJECT_DIR/coverage.json
      - $CI_PROJECT_DIR/coverage.html
      - $CI_PROJECT_DIR/coverage_report.txt
  tags:
    - healthcloud-multi
    
deploy_develop_to_staging:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_STAGING_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app-testing
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_STAGING_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app-testing
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  resource_group: staging # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app-testing/engagement-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app-testing/engagement-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy engagement-staging --image eu.gcr.io/bewell-app-testing/engagement-staging:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --memory 512M --set-env-vars "GOOGLE_CLOUD_PROJECT=$STAGING_GOOGLE_CLOUD_PROJECT,SCHEMA_HOST=$STAGING_SCHEMA_HOST,ENVIRONMENT=$STAGING_ENVIRONMENT,JWT_KEY=$STAGING_JWT_KEY,SENTRY_DSN=$STAGING_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$STAGING_ROOT_COLLECTION_SUFFIX,FIREBASE_WEB_API_KEY=$STAGING_FIREBASE_WEB_API_KEY,HOST=$CORE_EDI_API_HOST,API_SCHEME=$CORE_EDI_API_SCHEME,TOKEN_URL=$CORE_EDI_API_TOKEN_URL,AUTH_SERVER_DOMAIN=$CORE_EDI_AUTH_SERVER_DOMAIN,GRANT_TYPE=$CORE_EDI_GRANT_TYPE,USERNAME=$CORE_EDI_USERNAME,PASSWORD=$CORE_EDI_PASSWORD,CLIENT_ID=$CORE_EDI_CLIENT_ID,CLIENT_SECRET=$CORE_EDI_CLIENT_SECRET,AUTH_SERVER_INTROSPECTION_URL=$CORE_AUTH_SERVER_INTROSPECTION_URL,GHOST_CMS_API_ENDPOINT=$GHOST_CMS_API_ENDPOINT,GHOST_CMS_API_KEY=$GHOST_CMS_API_KEY,GOOGLE_PROJECT_NUMBER=$STAGING_GOOGLE_PROJECT_NUMBER,SERVICE_HOST=$STAGING_SERVICE_HOST,MAILGUN_API_KEY=$STAGING_MAILGUN_API_KEY,MAILGUN_DOMAIN=$STAGING_MAILGUN_DOMAIN,MAILGUN_FROM=$STAGING_MAILGUN_FROM,SEND_IN_BLUE_API_KEY=$SEND_IN_BLUE_API_KEY,SEND_IN_BLUE_ENABLED=$SEND_IN_BLUE_ENABLED,TWILIO_VIDEO_SID=$TWILIO_VIDEO_SID,TWILIO_VIDEO_SECRET=$TWILIO_VIDEO_SECRET,TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID,TWILIO_ACCOUNT_AUTH_TOKEN=$TWILIO_ACCOUNT_AUTH_TOKEN,TWILIO_SMS_NUMBER=$TWILIO_SMS_NUMBER,TWILIO_MESSAGING_USER=$TWILIO_MESSAGING_USER,TWILIO_MESSAGING_SERVICE_SID=$TWILIO_MESSAGING_SERVICE_SID,TWILIO_MESSAGING_AUTH_TOKEN=$TWILIO_MESSAGING_AUTH_TOKEN,SERVER_PUBLIC_DOMAIN=$TEST_SERVER_PUBLIC_DOMAIN,AIT_API_KEY=$STAGING_AIT_API_KEY,AIT_USERNAME=$STAGING_AIT_USERNAME,AIT_SENDER_ID=$STAGING_AIT_SENDER_ID,AIT_ENVIRONMENT=$STAGING_AIT_ENVIRONMENT"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker engagement-staging --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic engagement-staging --to-latest --region europe-west1 --platform managed --quiet
  tags:
    - healthcloud-multi

deploy_develop_to_testing:
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/engagement-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/engagement-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy engagement-testing --image eu.gcr.io/bewell-app/engagement-testing:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --memory 1000M --cpu 2 --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,SCHEMA_HOST=$TESTING_SCHEMA_HOST,ENVIRONMENT=$TESTING_ENVIRONMENT,JWT_KEY=$PROD_JWT_KEY,SENTRY_DSN=$PROD_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$TESTING_ROOT_COLLECTION_SUFFIX,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,HOST=$CORE_EDI_API_HOST,API_SCHEME=$CORE_EDI_API_SCHEME,TOKEN_URL=$CORE_EDI_API_TOKEN_URL,AUTH_SERVER_DOMAIN=$CORE_EDI_AUTH_SERVER_DOMAIN,GRANT_TYPE=$CORE_EDI_GRANT_TYPE,USERNAME=$CORE_EDI_USERNAME,PASSWORD=$CORE_EDI_PASSWORD,CLIENT_ID=$CORE_EDI_CLIENT_ID,CLIENT_SECRET=$CORE_EDI_CLIENT_SECRET,AUTH_SERVER_INTROSPECTION_URL=$CORE_AUTH_SERVER_INTROSPECTION_URL,GHOST_CMS_API_ENDPOINT=$GHOST_CMS_API_ENDPOINT,GHOST_CMS_API_KEY=$GHOST_CMS_API_KEY,GOOGLE_PROJECT_NUMBER=$TESTING_GOOGLE_PROJECT_NUMBER,SERVICE_HOST=$TESTING_SERVICE_HOST,MAILGUN_API_KEY=$TESTING_MAILGUN_API_KEY,MAILGUN_DOMAIN=$TESTING_MAILGUN_DOMAIN,MAILGUN_FROM=$TESTING_MAILGUN_FROM,SEND_IN_BLUE_API_KEY=$SEND_IN_BLUE_API_KEY,SEND_IN_BLUE_ENABLED=$SEND_IN_BLUE_ENABLED,TWILIO_VIDEO_SID=$TWILIO_VIDEO_SID,TWILIO_VIDEO_SECRET=$TWILIO_VIDEO_SECRET,TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID, TWILIO_ACCOUNT_AUTH_TOKEN=$TWILIO_ACCOUNT_AUTH_TOKEN,TWILIO_SMS_NUMBER=$TWILIO_SMS_NUMBER, TWILIO_MESSAGING_USER=$TWILIO_MESSAGING_USER,TWILIO_MESSAGING_SERVICE_SID=$TWILIO_MESSAGING_SERVICE_SID, TWILIO_MESSAGING_AUTH_TOKEN=$TWILIO_MESSAGING_AUTH_TOKEN,SERVER_PUBLIC_DOMAIN=$PROD_SERVER_PUBLIC_DOMAIN, AIT_API_KEY=$PROD_AIT_API_KEY,AIT_USERNAME=$PROD_AIT_USERNAME, AIT_SENDER_ID=$PROD_AIT_SENDER_ID,AIT_ENVIRONMENT=$PROD_AIT_ENVIRONMENT"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker engagement-testing --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic engagement-testing --to-latest  --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi

deploy_develop_to_e2e:
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/engagement-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/engagement-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy engagement-e2e --image eu.gcr.io/bewell-app/engagement-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --memory 1000M --cpu 2 --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,SCHEMA_HOST=$TESTING_SCHEMA_HOST,ENVIRONMENT=$E2E_ENVIRONMENT,JWT_KEY=$PROD_JWT_KEY,SENTRY_DSN=$PROD_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$E2E_ROOT_COLLECTION_SUFFIX,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,HOST=$CORE_EDI_API_HOST,API_SCHEME=$CORE_EDI_API_SCHEME,TOKEN_URL=$CORE_EDI_API_TOKEN_URL,AUTH_SERVER_DOMAIN=$CORE_EDI_AUTH_SERVER_DOMAIN,GRANT_TYPE=$CORE_EDI_GRANT_TYPE,USERNAME=$CORE_EDI_USERNAME,PASSWORD=$CORE_EDI_PASSWORD,CLIENT_ID=$CORE_EDI_CLIENT_ID,CLIENT_SECRET=$CORE_EDI_CLIENT_SECRET,AUTH_SERVER_INTROSPECTION_URL=$CORE_AUTH_SERVER_INTROSPECTION_URL,GHOST_CMS_API_ENDPOINT=$GHOST_CMS_API_ENDPOINT,GHOST_CMS_API_KEY=$GHOST_CMS_API_KEY,GOOGLE_PROJECT_NUMBER=$TESTING_GOOGLE_PROJECT_NUMBER,SERVICE_HOST=$TESTING_SERVICE_HOST,MAILGUN_API_KEY=$TESTING_MAILGUN_API_KEY,MAILGUN_DOMAIN=$TESTING_MAILGUN_DOMAIN,MAILGUN_FROM=$TESTING_MAILGUN_FROM,SEND_IN_BLUE_API_KEY=$SEND_IN_BLUE_API_KEY,SEND_IN_BLUE_ENABLED=$SEND_IN_BLUE_ENABLED,\
      TWILIO_VIDEO_SID=$TWILIO_VIDEO_SID,TWILIO_VIDEO_SECRET=$TWILIO_VIDEO_SECRET,TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID,\
      TWILIO_ACCOUNT_AUTH_TOKEN=$TWILIO_ACCOUNT_AUTH_TOKEN,TWILIO_SMS_NUMBER=$TWILIO_SMS_NUMBER,\
      TWILIO_MESSAGING_USER=$TWILIO_MESSAGING_USER,TWILIO_MESSAGING_SERVICE_SID=$TWILIO_MESSAGING_SERVICE_SID,\
      TWILIO_MESSAGING_AUTH_TOKEN=$TWILIO_MESSAGING_AUTH_TOKEN,SERVER_PUBLIC_DOMAIN=$PROD_SERVER_PUBLIC_DOMAIN,\
      AIT_API_KEY=$PROD_AIT_API_KEY,AIT_USERNAME=$PROD_AIT_USERNAME,\
      AIT_SENDER_ID=$PROD_AIT_SENDER_ID,AIT_ENVIRONMENT=$PROD_AIT_ENVIRONMENT"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker engagement-e2e --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic engagement-e2e --to-latest  --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi


deploy_master_to_demo:
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - master
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/engagement-demo:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/engagement-demo:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy engagement-demo --image eu.gcr.io/bewell-app/engagement-demo:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --memory 512M --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,SCHEMA_HOST=$PROD_SCHEMA_HOST,ENVIRONMENT=$DEMO_ENVIRONMENT,JWT_KEY=$PROD_JWT_KEY,SENTRY_DSN=$PROD_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$DEMO_ROOT_COLLECTION_SUFFIX,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,HOST=$CORE_EDI_API_HOST,API_SCHEME=$CORE_EDI_API_SCHEME,TOKEN_URL=$CORE_EDI_API_TOKEN_URL,AUTH_SERVER_DOMAIN=$CORE_EDI_AUTH_SERVER_DOMAIN,GRANT_TYPE=$CORE_EDI_GRANT_TYPE,USERNAME=$CORE_EDI_USERNAME,PASSWORD=$CORE_EDI_PASSWORD,CLIENT_ID=$CORE_EDI_CLIENT_ID,CLIENT_SECRET=$CORE_EDI_CLIENT_SECRET,AUTH_SERVER_INTROSPECTION_URL=$CORE_AUTH_SERVER_INTROSPECTION_URL,GHOST_CMS_API_ENDPOINT=$GHOST_CMS_API_ENDPOINT,GHOST_CMS_API_KEY=$GHOST_CMS_API_KEY,GOOGLE_PROJECT_NUMBER=$TESTING_GOOGLE_PROJECT_NUMBER,SERVICE_HOST=$DEMO_SERVICE_HOST,MAILGUN_API_KEY=$TESTING_MAILGUN_API_KEY,MAILGUN_DOMAIN=$TESTING_MAILGUN_DOMAIN,MAILGUN_FROM=$TESTING_MAILGUN_FROM,SEND_IN_BLUE_API_KEY=$SEND_IN_BLUE_API_KEY,SEND_IN_BLUE_ENABLED=$SEND_IN_BLUE_ENABLED"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker engagement-demo --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic engagement-demo --to-latest  --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi

deploy_master_to_prod:
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - master
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $PROD_GATEWAY_RELOAD_ENDPOINT
  resource_group: prod # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/engagement-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/engagement-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy engagement-prod --image eu.gcr.io/bewell-app/engagement-prod:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --memory 1000M --cpu 2  --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,SCHEMA_HOST=$PROD_SCHEMA_HOST,ENVIRONMENT=$PROD_ENVIRONMENT,JWT_KEY=$PROD_JWT_KEY,SENTRY_DSN=$PROD_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$PROD_ROOT_COLLECTION_SUFFIX,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,HOST=$CORE_EDI_API_HOST,API_SCHEME=$CORE_EDI_API_SCHEME,TOKEN_URL=$CORE_EDI_API_TOKEN_URL,AUTH_SERVER_DOMAIN=$CORE_EDI_AUTH_SERVER_DOMAIN,GRANT_TYPE=$CORE_EDI_GRANT_TYPE,USERNAME=$CORE_EDI_USERNAME,PASSWORD=$CORE_EDI_PASSWORD,CLIENT_ID=$CORE_EDI_CLIENT_ID,CLIENT_SECRET=$CORE_EDI_CLIENT_SECRET,AUTH_SERVER_INTROSPECTION_URL=$CORE_AUTH_SERVER_INTROSPECTION_URL,GHOST_CMS_API_ENDPOINT=$GHOST_CMS_API_ENDPOINT,GHOST_CMS_API_KEY=$GHOST_CMS_API_KEY,GOOGLE_PROJECT_NUMBER=$PROD_GOOGLE_PROJECT_NUMBER,SERVICE_HOST=$PROD_SERVICE_HOST,MAILGUN_API_KEY=$PROD_MAILGUN_API_KEY,MAILGUN_DOMAIN=$PROD_MAILGUN_DOMAIN,MAILGUN_FROM=$PROD_MAILGUN_FROM,SEND_IN_BLUE_API_KEY=$SEND_IN_BLUE_API_KEY,SEND_IN_BLUE_ENABLED=$SEND_IN_BLUE_ENABLED, TWILIO_VIDEO_SID=$TWILIO_VIDEO_SID,TWILIO_VIDEO_SECRET=$TWILIO_VIDEO_SECRET,TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID, TWILIO_ACCOUNT_AUTH_TOKEN=$TWILIO_ACCOUNT_AUTH_TOKEN,TWILIO_SMS_NUMBER=$TWILIO_SMS_NUMBER, TWILIO_MESSAGING_USER=$TWILIO_MESSAGING_USER,TWILIO_MESSAGING_SERVICE_SID=$TWILIO_MESSAGING_SERVICE_SID, TWILIO_MESSAGING_AUTH_TOKEN=$TWILIO_MESSAGING_AUTH_TOKEN,SERVER_PUBLIC_DOMAIN=$PROD_SERVER_PUBLIC_DOMAIN, AIT_API_KEY=$PROD_AIT_API_KEY,AIT_USERNAME=$PROD_AIT_USERNAME, AIT_SENDER_ID=$PROD_AIT_SENDER_ID,AIT_ENVIRONMENT=$PROD_AIT_ENVIRONMENT"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker engagement-prod --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic engagement-prod --to-latest engagement-prod --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi